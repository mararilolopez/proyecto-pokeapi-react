{"ast":null,"code":"// Traemos pokemones a nuestro pokedex\nexport const getPokemons = async () => {\n  let offset = getRandonInt(0, 1113);\n\n  try {\n    let url = `https://pokeapi.co/api/v2/pokemon?limit=6&offset=${offset}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}; // Traemos la información de cada Pokemon\n\nexport const getPokemonData = async url => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction getRandonInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}","map":{"version":3,"sources":["/Users/ricardocoronel/Documents/code/pocratech/src/services/api.js"],"names":["getPokemons","offset","getRandonInt","url","response","fetch","data","json","error","console","log","getPokemonData","min","max","Math","floor","random"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,YAAY;AACrC,MAAIC,MAAM,GAAGC,YAAY,CAAC,CAAD,EAAI,IAAJ,CAAzB;;AACA,MAAI;AACF,QAAIC,GAAG,GAAI,oDAAmDF,MAAO,EAArE;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOR,GAAP,IAAe;AAC3C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CARM;;AAUP,SAASN,YAAT,CAAsBU,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD","sourcesContent":["// Traemos pokemones a nuestro pokedex\nexport const getPokemons = async () => {\n  let offset = getRandonInt(0, 1113);\n  try {\n    let url = `https://pokeapi.co/api/v2/pokemon?limit=6&offset=${offset}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// Traemos la información de cada Pokemon\nexport const getPokemonData = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction getRandonInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n"]},"metadata":{},"sourceType":"module"}