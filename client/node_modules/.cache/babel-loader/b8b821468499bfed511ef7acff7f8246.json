{"ast":null,"code":"var _jsxFileName = \"/Users/juanrosales/Desktop/Proyecto-Navidad-React/pocratech/client/src/components/Auth/LoginForm/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./LoginForm.scss\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginForm(props) {\n  _s();\n\n  const {\n    setShowLogin\n  } = props;\n  const [loginUser, setLoginUser] = useState({\n    user_name: \"\",\n    password: \"\"\n  });\n\n  const handleInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setLoginUser({ ...loginUser,\n      [name]: value\n    });\n  }; // Login user\n  //Esta función conecta a través de axios la ruta post de login en la que el usuario introduce su user_name y su password y tras loguearse se ejecuta el .then que es un proceso \"automático\" que hay que hacer así en el que se codifica el token con jwtDecode, se muestra por pantalla, se recoge en el logalStorage la palabra token y el token propiamente dicho y se setea en el localStorage.\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    try {\n      axios.post(\"http://localhost:4000/users/login\", {\n        user_name: loginUser.user_name,\n        password: loginUser.password\n      }).then(response => {\n        console.log(response);\n        localStorage.setItem(\"token\", response.data.token);\n        setLoginUser({\n          user_name: \"\",\n          password: \"\"\n        });\n        Swal.fire({\n          icon: \"success\",\n          title: \"Estás Logueado, a disfrutar!!!\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        window.location.replace(\"\");\n      });\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"titulo\",\n      children: \"Formulario de login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inputs\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_name\",\n        name: \"user_name\",\n        value: loginUser.user_name,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inputs\",\n        children: \"Contrase\\xF1a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: loginUser.password,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\xBFA\\xFAn no est\\xE1s registrado?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setShowLogin(false),\n        children: \"Reg\\xEDstrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginForm, \"H8vXk09tbQo0enleqJ6VyXo0EQE=\");\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/juanrosales/Desktop/Proyecto-Navidad-React/pocratech/client/src/components/Auth/LoginForm/LoginForm.js"],"names":["React","useState","axios","Swal","LoginForm","props","setShowLogin","loginUser","setLoginUser","user_name","password","handleInput","e","name","target","value","handleSubmit","preventDefault","post","then","response","console","log","localStorage","setItem","data","token","fire","icon","title","showConfirmButton","timer","window","location","replace","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./LoginForm.scss\";\nimport Swal from \"sweetalert2\";\nexport default function LoginForm(props) {\n  const { setShowLogin } = props;\n  const [loginUser, setLoginUser] = useState({\n    user_name: \"\",\n    password: \"\",\n  });\n  const handleInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setLoginUser({ ...loginUser, [name]: value });\n  };\n  // Login user\n  //Esta función conecta a través de axios la ruta post de login en la que el usuario introduce su user_name y su password y tras loguearse se ejecuta el .then que es un proceso \"automático\" que hay que hacer así en el que se codifica el token con jwtDecode, se muestra por pantalla, se recoge en el logalStorage la palabra token y el token propiamente dicho y se setea en el localStorage.\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      axios\n        .post(\"http://localhost:4000/users/login\", {\n          user_name: loginUser.user_name,\n          password: loginUser.password,\n        })\n        .then((response) => {\n          console.log(response);\n          localStorage.setItem(\"token\", response.data.token);\n          setLoginUser({\n            user_name: \"\",\n            password: \"\",\n          });\n          Swal.fire({\n            icon: \"success\",\n            title: \"Estás Logueado, a disfrutar!!!\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          window.location.replace(\"\");\n        });\n    } catch (error) {}\n  };\n  return (\n    <>\n      <h2 className=\"titulo\">Formulario de login</h2>\n      <form onSubmit={handleSubmit}>\n        <label className=\"inputs\">Username:</label>\n        <input\n          type=\"text\"\n          id=\"user_name\"\n          name=\"user_name\"\n          value={loginUser.user_name}\n          onChange={handleInput}\n        />\n\n        <label className=\"inputs\">Contraseña:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={loginUser.password}\n          onChange={handleInput}\n        />\n\n        <button type=\"submit\">Login</button>\n      </form>\n      <p>\n        ¿Aún no estás registrado?{\" \"}\n        <span onClick={() => setShowLogin(false)}>Regístrate</span>\n      </p>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}