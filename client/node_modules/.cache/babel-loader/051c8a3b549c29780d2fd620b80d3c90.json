{"ast":null,"code":"var _jsxFileName = \"/Users/ricardocoronel/Documents/code/pocratech/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport UserContext from \"./context/UserContext\";\nimport { getPokemons, getPokemonData } from \"./services/api\";\nimport PokeCard from \"./components/PokeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\n  const [pokemons, setPokemons] = useState([]);\n  const [decodeToken, setDecodeToken] = useState({});\n  console.log(trigerPokedex);\n  useEffect(() => {\n    fetchPokemons();\n  }, [trigerPokedex]);\n\n  const fetchPokemons = async () => {\n    try {\n      const data = await getPokemons();\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const result = await Promise.all(promises);\n      setPokemons(result);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Simulamos que traemos información del usuario\n\n\n  const userData = {\n    username: \"Ricardo\",\n    school: \"Socratech\",\n    year: 2021\n  }; // Register user\n\n  const newUser = () => {\n    axios.post(\"http://localhost:4000/users/saveUser\", {\n      name: \"Pocha\",\n      user_name: \"pochita\",\n      password: \"123\"\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  const TOKEN = \"token\"; // Login user\n\n  const loginUser = () => {\n    axios.post(\"http://localhost:4000/users/login\", {\n      user_name: \"pochita\",\n      password: \"123\"\n    }).then(response => {\n      console.log(response);\n      console.log(response.data.token);\n      console.log(jwtDecode(response.data.token));\n      setDecodeToken(jwtDecode(response.data.token));\n      localStorage.setItem(TOKEN, response.data.token);\n    });\n  };\n\n  console.log(\"DecodeToken\", decodeToken.user);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: userData,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTrigerPokedex(!trigerPokedex),\n        children: \"Descubre Pokemones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newUser,\n        children: \"Crear usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loginUser,\n        children: \"Login usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), pokemons.map((pokemon, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokemon.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(PokeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iofFI4x78be2hChH5bq6v+Q4g14=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ricardocoronel/Documents/code/pocratech/client/src/App.js"],"names":["useEffect","useState","axios","jwtDecode","UserContext","getPokemons","getPokemonData","PokeCard","App","trigerPokedex","setTrigerPokedex","pokemons","setPokemons","decodeToken","setDecodeToken","console","log","fetchPokemons","data","promises","results","map","pokemon","url","result","Promise","all","error","userData","username","school","year","newUser","post","name","user_name","password","then","response","TOKEN","loginUser","token","localStorage","setItem","user","idx"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport UserContext from \"./context/UserContext\";\nimport { getPokemons, getPokemonData } from \"./services/api\";\nimport PokeCard from \"./components/PokeCard\";\n\nfunction App() {\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\n  const [pokemons, setPokemons] = useState([]);\n  const [decodeToken, setDecodeToken] = useState({});\n  console.log(trigerPokedex);\n  useEffect(() => {\n    fetchPokemons();\n  }, [trigerPokedex]);\n\n  const fetchPokemons = async () => {\n    try {\n      const data = await getPokemons();\n      const promises = data.results.map(async (pokemon) => {\n        return await getPokemonData(pokemon.url);\n      });\n      const result = await Promise.all(promises);\n      setPokemons(result);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // Simulamos que traemos información del usuario\n  const userData = {\n    username: \"Ricardo\",\n    school: \"Socratech\",\n    year: 2021,\n  };\n  // Register user\n  const newUser = () => {\n    axios\n      .post(\"http://localhost:4000/users/saveUser\", {\n        name: \"Pocha\",\n        user_name: \"pochita\",\n        password: \"123\",\n      })\n      .then((response) => {\n        console.log(response);\n      });\n  };\n\n  const TOKEN = \"token\";\n  // Login user\n  const loginUser = () => {\n    axios\n      .post(\"http://localhost:4000/users/login\", {\n        user_name: \"pochita\",\n        password: \"123\",\n      })\n      .then((response) => {\n        console.log(response);\n        console.log(response.data.token);\n        console.log(jwtDecode(response.data.token));\n        setDecodeToken(jwtDecode(response.data.token));\n        localStorage.setItem(TOKEN, response.data.token);\n      });\n  };\n\n  console.log(\"DecodeToken\", decodeToken.user);\n\n  return (\n    <UserContext.Provider value={userData}>\n      <div className=\"App\">\n        <button onClick={() => setTrigerPokedex(!trigerPokedex)}>\n          Descubre Pokemones\n        </button>\n        <button onClick={newUser}>Crear usuarios</button>\n        <button onClick={loginUser}>Login usuarios</button>\n        {pokemons.map((pokemon, idx) => {\n          return <p key={idx}>{pokemon.name}</p>;\n        })}\n        <PokeCard />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}