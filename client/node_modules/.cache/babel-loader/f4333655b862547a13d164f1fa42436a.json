{"ast":null,"code":"var _jsxFileName = \"/Users/ricardocoronel/Documents/code/pocratech/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport UserContext from \"./context/UserContext\";\nimport { getPokemons, getPokemonData } from \"./services/api\";\nimport PokeCard from \"./components/PokeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\n  const [pokemons, setPokemons] = useState([]);\n  console.log(trigerPokedex);\n  useEffect(() => {\n    fetchPokemons();\n  }, [trigerPokedex]);\n\n  const fetchPokemons = async () => {\n    try {\n      const data = await getPokemons();\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const result = await Promise.all(promises);\n      setPokemons(result);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Simulamos que traemos información del usuario\n\n\n  const userData = {\n    username: \"Ricardo\"\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: userData,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTrigerPokedex(!trigerPokedex),\n        children: \"Descubre Pokemones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), pokemons.map((pokemon, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokemon.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Al2crVpxwphlTarVJWF8YYsGtb4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ricardocoronel/Documents/code/pocratech/src/App.js"],"names":["useEffect","useState","UserContext","getPokemons","getPokemonData","PokeCard","App","trigerPokedex","setTrigerPokedex","pokemons","setPokemons","console","log","fetchPokemons","data","promises","results","map","pokemon","url","result","Promise","all","error","userData","username","idx","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gBAA5C;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACAP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACN,aAAD,CAFM,CAAT;;AAIA,QAAMM,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMX,WAAW,EAA9B;AACA,YAAMY,QAAQ,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,MAAOC,OAAP,IAAmB;AACnD,eAAO,MAAMd,cAAc,CAACc,OAAO,CAACC,GAAT,CAA3B;AACD,OAFgB,CAAjB;AAGA,YAAMC,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYP,QAAZ,CAArB;AACAL,MAAAA,WAAW,CAACU,MAAD,CAAX;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACD,KARD,CAQE,OAAOG,KAAP,EAAc;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD;AACF,GAZD,CARa,CAqBb;;;AACA,QAAMC,QAAQ,GAAG;AACfC,IAAAA,QAAQ,EAAE;AADK,GAAjB;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,QAA7B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMhB,gBAAgB,CAAC,CAACD,aAAF,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGE,QAAQ,CAACQ,GAAT,CAAa,CAACC,OAAD,EAAUQ,GAAV,KAAkB;AAC9B,4BAAO;AAAA,oBAAcR,OAAO,CAACS;AAAtB,WAAQD,GAAR;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAtCQpB,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport UserContext from \"./context/UserContext\";\nimport { getPokemons, getPokemonData } from \"./services/api\";\nimport PokeCard from \"./components/PokeCard\";\n\nfunction App() {\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\n  const [pokemons, setPokemons] = useState([]);\n  console.log(trigerPokedex);\n  useEffect(() => {\n    fetchPokemons();\n  }, [trigerPokedex]);\n\n  const fetchPokemons = async () => {\n    try {\n      const data = await getPokemons();\n      const promises = data.results.map(async (pokemon) => {\n        return await getPokemonData(pokemon.url);\n      });\n      const result = await Promise.all(promises);\n      setPokemons(result);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // Simulamos que traemos información del usuario\n  const userData = {\n    username: \"Ricardo\",\n  };\n\n  return (\n    <UserContext.Provider value={userData}>\n      <div className=\"App\">\n        <button onClick={() => setTrigerPokedex(!trigerPokedex)}>\n          Descubre Pokemones\n        </button>\n        {pokemons.map((pokemon, idx) => {\n          return <p key={idx}>{pokemon.name}</p>;\n        })}\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}